// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  categoryId           String       @id @default(uuid())
  categoryName         String       @unique()
  categoryUrl          String
  imageUrl             String
  status               activestatus
  displayOnHome        activestatus
  displayOnHomecoupons activestatus
  displayOnFooter      activestatus
  metaTitle            String
  metaKeyword          String
  metaCanonical        String
  metaSchema           String
  metaDescription      String
  store                store[]

  coupon coupon[]

  @@index([categoryName])
}

enum activestatus {
  ACTIVE
  INACTIVE
}

model user {
  id         String       @id @default(uuid())
  name       String
  email      String       @unique
  status     activestatus @default(ACTIVE)
  password   String
  department String?
  token      String?
  roles      roles[]
  store      store[]
  coupons    coupon[]
}

model roles {
  id     String       @id @default(uuid())
  roles  currentRoles @default(USER)
  User   user         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

enum currentRoles {
  USER
  ADMIN
  EDITOR
}

model token {
  id             String   @id @default(uuid())
  token          String   @unique
  expirationTime DateTime

  @@index([token])
}

model store {
  storeid              String       @id @default(uuid())
  storeName            String       @unique
  createdBy            user         @relation(fields: [createdById], references: [id])
  createdById          String
  merchantId           Int          @unique
  storeAlternateName   String
  storeUrl             String
  storeLogo            String
  TrackingLink         String
  storeDomainName      String
  utmParameter         String
  status               activestatus
  displayOnMenu        activestatus
  displayOnNotificaton activestatus
  topStore             activestatus
  topStoreInFooter     activestatus
  storeDescription     String
  metaTitle            String
  metaKeyword          String
  metaCanonical        String
  metaSchema           String
  metaDescription      String
  categories           category[]
  coupon               coupon[]

  @@index([storeName])
}

model coupon {
  couponId           String       @id @default(uuid())
  AggregatorType     String
  type               String
  publisher          user         @relation(fields: [publisherId], references: [id])
  publisherName      String
  publisherId        String
  cashbackType       String
  minOff             Int
  startDate          DateTime
  expirationTime     DateTime
  couponCode         String
  MerchantLink       String
  affiliateUrl       String
  termsAndConditions String
  CouponPunchLine    String
  status             activestatus
  topOffer           activestatus
  hotOfTheDay        activestatus
  showWithCategory   activestatus
  description        String
  category           category[]
  store              store        @relation(fields: [storeid], references: [merchantId])
  storeid            Int
}
